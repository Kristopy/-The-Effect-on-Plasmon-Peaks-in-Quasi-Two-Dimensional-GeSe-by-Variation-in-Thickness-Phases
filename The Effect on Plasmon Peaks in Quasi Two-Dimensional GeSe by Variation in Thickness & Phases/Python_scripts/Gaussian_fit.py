# <examples/doc_parameters_basic.py>
import matplotlib.pyplot as plt
import numpy as np

from lmfit.models import ExponentialModel, GaussianModel

x = np.array([279.6229553222656, 283.11834716796875, 286.61413574218756, 290.11022949218756, 293.60668945312506, 297.10345458984375, 300.60052490234375, 304.0978698730469, 307.5954895019531, 311.0934143066407, 314.591552734375, 318.08996582031256, 321.5885314941406, 325.0873718261719, 328.58642578125, 332.0856323242188, 335.5849914550781, 339.0845336914063, 342.58422851562506, 346.08404541015625, 349.5839538574219, 353.083984375, 356.58410644531256, 360.0843200683594, 363.5845642089844, 367.0848999023438, 370.5852355957031, 374.0856018066407, 377.5859985351563, 381.0863342285156, 384.58673095703125, 388.0870361328125, 391.58734130859375, 395.0875244140625, 398.5876770019532, 402.0877380371094, 405.5877380371094, 409.0875549316407, 412.58728027343756, 416.0868835449219, 419.5863037109375, 423.0856018066406, 426.5846862792969, 430.0835876464844, 433.5823059082032, 437.08074951171875, 440.5790100097657, 444.0770263671875, 447.57470703125, 451.07220458984375, 454.5693664550781, 458.0662536621094, 461.56280517578125, 465.05905151367193, 468.55490112304693, 472.05050659179693, 475.54559326171875, 479.0404357910156, 482.53479003906256, 486.0287780761719, 489.5223693847656, 493.01550292968756, 496.50817871093756, 500.0003662109375, 503.4921264648438, 506.98336791992193, 510.4741516113282, 513.9642944335938, 517.4541015625, 520.9431762695312, 524.4318237304688, 527.9198608398438, 531.4072875976562, 534.8942260742188, 538.3803710937501, 541.8660278320314, 545.3510131835939, 548.8353881835938, 552.3189697265625, 555.802001953125, 559.2843627929688, 562.7659301757812, 566.2467651367188, 569.7269897460939, 573.2064208984375, 576.6849975585938, 580.162841796875, 583.6400146484375, 587.1163330078125, 590.5917968750001, 594.06640625, 597.5402832031251, 601.0132446289064, 604.4852905273438, 607.9564819335939, 611.4268188476564, 614.896240234375, 618.36474609375, 621.8323364257814, 625.2989501953125, 628.7645874023439, 632.2291870117188, 635.6929931640625, 639.1557006835938, 642.6173706054688, 646.0779418945312, 649.53759765625, 652.9962158203125, 656.4536743164062, 659.9100952148438, 663.3654174804689, 666.8196411132812, 670.2727050781251, 673.7246704101562, 677.1754760742188, 680.6251220703126, 684.0735473632814, 687.5208129882812, 690.9669189453126, 694.4117431640626, 697.8554077148438, 701.2977294921875, 704.7388916015625, 708.1787719726564, 711.6173095703126, 715.0546264648439, 718.4906616210938, 721.9252319335938])


y = np.array([757.3846153846154, 746.6153846153846, 817.3076923076923, 827.7692307692307, 874.1538461538462, 920.6923076923077, 949.6153846153846, 963.4615384615385, 1010.2307692307693, 1039.4615384615386, 1046.5384615384614, 1096.1538461538462, 1128.5384615384614, 1172.5384615384614, 1213.8461538461538, 1271.6923076923076, 1316.5384615384614, 1377.3846153846155, 1442.4615384615386, 1499.4615384615386, 1566.7692307692307, 1650.076923076923, 1741.5384615384614, 1855.923076923077, 1934.8461538461538, 2079.846153846154, 2170.3076923076924, 2304.3076923076924, 2439.4615384615386, 2598.3846153846152, 2777.4615384615386, 2986.846153846154, 3141.3076923076924, 3269.5384615384614, 3457.4615384615386, 3547.6923076923076, 3651.3846153846152, 3739.6923076923076, 4206.307692307692, 4203.846153846154, 4247.384615384615, 4458.153846153846, 4697.692307692308, 4943.615384615385, 5140.923076923077, 5393.076923076923, 5600.615384615385, 5731.307692307692, 5791.307692307692, 5903.2307692307695, 6003.076923076923, 6170.2307692307695, 6190.692307692308, 6180.846153846154, 6208.923076923077, 6137.384615384615, 6058.923076923077, 5902.692307692308, 5762.384615384615, 5670.384615384615, 5545.615384615385, 5342.692307692308, 5205.7692307692305, 5011.846153846154, 4941.384615384615, 4814.307692307692, 4728.923076923077, 4659.2307692307695, 4551.2307692307695, 4505.923076923077, 4480.7692307692305, 4384.384615384615, 4319.615384615385, 4275.076923076923, 4226.384615384615, 4175.2307692307695, 4244.2307692307695, 4089.076923076923, 4037.230769230769, 3998.3076923076924, 3946.769230769231, 3911.769230769231, 3871.3076923076924, 3851.4615384615386, 3867.5384615384614, 3856.3846153846152, 3817.5384615384614, 3853.230769230769, 3811.076923076923, 3790.0, 3780.6923076923076, 3745.4615384615386, 3780.6153846153848, 3840.076923076923, 3933.076923076923, 4126.615384615385, 4410.0, 4865.461538461538, 5421.076923076923, 6149.076923076923, 6993.7692307692305, 7911.846153846154, 8739.153846153846, 9480.153846153846, 9960.461538461539, 10324.76923076923, 10501.0, 10449.307692307691, 10409.692307692309, 10133.923076923076, 9880.461538461539, 9511.384615384615, 9062.76923076923, 8646.692307692309, 8145.923076923077, 7744.923076923077, 7245.615384615385, 6790.923076923077, 6305.615384615385, 5906.2307692307695, 5511.2307692307695, 5151.7692307692305, 4762.384615384615, 4536.7692307692305, 4234.153846153846, 4002.4615384615386, 3740.3846153846152, 3512.769230769231])

exp_mod = ExponentialModel(prefix='exp_')
pars = exp_mod.guess(y, x=x)

gauss1 = GaussianModel(prefix='g1_')
pars.update(gauss1.make_params())

pars['g1_center'].set(value=450, min=420, max=465)
pars['g1_sigma'].set(value=15, min=68, max=69)
pars['g1_amplitude'].set(value=2000)

gauss2 = GaussianModel(prefix='g2_')
pars.update(gauss2.make_params())

pars['g2_center'].set(value=650, min=620, max=655)
pars['g2_sigma'].set(value=15, min=32, max=33)
pars['g2_amplitude'].set(value=2000)

mod = gauss1 + gauss2 + exp_mod

init = mod.eval(pars, x=x)
out = mod.fit(y, pars, x=x)

print(out.fit_report(min_correl=0.5))

fig, axes = plt.subplots(1, 2, figsize=(12.8, 4.8))
axes[0].plot(x, y, 'b')
#axes[0].plot(x, init, 'k--', label='initial fit')
axes[0].plot(x, out.best_fit, 'r-', label='best fit')
axes[0].legend(loc='best')

comps = out.eval_components(x=x)
axes[1].plot(x, y, 'b')
axes[1].plot(x, comps['g1_'], 'g--', label='Gaussian component 1')
axes[1].plot(x, comps['g2_'], 'm--', label='Gaussian component 2')
#axes[1].plot(x, comps['exp_'], 'k--', label='Exponential component')
axes[1].legend(loc='best')

directory = "/Users/kristoffervarslott/Documents/MENA/Master_MENA/Masteroppgave/Experimental_data/CL-Analysis/GeSe_4_Data/Loc_1"
plt.savefig(directory + "/TEST3.pdf", format='pdf', dpi=1200)
